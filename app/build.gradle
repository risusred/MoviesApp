plugins {
    id 'com.android.application'
    id 'kotlin-android'
}
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "org.example.moviesapp"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //SWIPE RECYCLER
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    //TIMBER
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //LEAK_CANARY
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2' // _up CANARY
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.2'

    // VIEW MODEL & LIVE DATA
    def lifecycle_version = "2.4.0-alpha01" // 2.3.1
    implementation "android.arch.lifecycle:extensions:$lifecycle_version" // ViewModelProviders
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"// ViewModel kotlin
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"// LiveData kotlin
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // GSON
    implementation 'com.google.code.gson:gson:2.8.6'

    // GLIDE
    implementation 'com.github.bumptech.glide:glide:4.10.0'

    // ROOM
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    kapt "androidx.room:room-compiler:$room_version"//NEEDS ON TOP apply plugin: 'kotlin-kapt'
    // To use Kotlin Symbolic Processing (KSP)
//    ksp "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // TEST ////////////////////////////////////////////////////////////////////

    //https://stackoverflow.com/questions/33682773/how-to-mock-jsonobject
    testImplementation 'org.robolectric:robolectric:4.2.1'


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


    androidTestImplementation('androidx.test.espresso:espresso-core:3.3.0') {
        // Necessary if app targets Marshmallow (since Espresso hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    }
    androidTestImplementation('androidx.test:runner:1.3.0') {
        // Necessary if app targets Marshmallow (since test runner hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.3.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
    }
    // IDLING RESOURCE
    implementation 'androidx.test.espresso:espresso-idling-resource:3.3.0'

    // INTENT
    androidTestImplementation('androidx.test.espresso:espresso-intents:3.3.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('androidx.test:runner:1.3.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('androidx.test:rules:1.3.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    // end INTENT

    // MOCKITO
    androidTestImplementation 'org.mockito:mockito-core:2.18.3'
    testImplementation 'org.mockito:mockito-core:2.18.3'

//    // UiAutomator OJO needs  minSdkVersion 18
//    // androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
//    // https://developer.android.com/training/testing/ui-testing/uiautomator-testing.html?hl=es
//    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
//    // end UiAutomator

    // END TEST ////////////////////////////////////////////////////////////////
}